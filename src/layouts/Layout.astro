---
import "@styles/global.css";
import Header from "@components/header.astro";
import HeaderItem from "@components/headerItem.astro";
import { ClientRouter } from "astro:transitions";
import ProfilePicture from "@components/profilePicture.astro";
import Icon from "@assets/icon.png";
import ThemeSelector from "@components/themeSelector.astro";

interface Props {
	title: string;
	subtitle?: string;
	showAvatar?: boolean;
}

const {
	title,
	subtitle,
	showAvatar = true,
} = Astro.props as Props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="description" content="" />
		<link rel="rei" href="https://i-reii.github.io" />
		<link
			rel="preload"
			href="/assets/fonts/Nunito.ttf"
			crossorigin="anonymous"
			as="font"
		/>
		<link
			rel="preload"
			href="/assets/fonts/DMSans.ttf"
			crossorigin="anonymous"
			as="font"
		/>
		<meta name="robots" content="index, follow" />
		<meta name="theme-color" content="#FFE0F9" />
		<title>rei's site</title>
		<link rel="icon" href={Icon.src} />

		<ClientRouter />
	</head>

	<body>
		<div id="header-box">
			<div>
				<Header>
					<HeaderItem title="Home" href="/" />
					<HeaderItem title="About" href="/about" />
					<HeaderItem title="Contact" href="/contacts" />
					<ThemeSelector />
				</Header>
				<div>
					<h2 set:html={title} />
					<sub set:html={subtitle} />
				</div>
			</div>
			{showAvatar && <ProfilePicture />}
		</div>
		<slot />
		<style>
			#header-box {
				display: flex;
				flex-direction: row;
				justify-content: space-between;
				margin-bottom: 1rem;
			}
		</style>
	</body><script>
		document.addEventListener("astro:page-load", () => {
			const THEME_KEY = "theme";
			const themeSystem = document.getElementById(
				"theme-system",
			) as HTMLInputElement;
			const themeLight = document.getElementById(
				"theme-light",
			) as HTMLInputElement;
			const themeDark = document.getElementById(
				"theme-dark",
			) as HTMLInputElement;

			const themes: Record<string, HTMLInputElement> = {
				dark: themeDark,
				light: themeLight,
				system: themeSystem,
			};

			function updateTheme(theme: string | null) {
				if (theme) localStorage.setItem(THEME_KEY, theme);
				else localStorage.removeItem(THEME_KEY);
				(themes[theme ?? "system"] ?? themeSystem).checked = true;
			}

			Object.entries(themes).forEach(([key, input]) => {
				input.addEventListener("change", () => {
					if (input.checked)
						updateTheme(key === "system" ? null : key);
				});
			});

			updateTheme(localStorage.getItem(THEME_KEY));
		});
	</script>
</html>
